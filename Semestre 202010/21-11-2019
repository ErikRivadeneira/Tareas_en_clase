#include<stdio.h>
#include<stdlib.h>
#define tam 100
void inicializaArreglo(int[]);
void datosArreglo(int);
void numBuscar(int);
void Parimpar (int);//declaración de la función de pares e impares
void main()
{
	int arreglo[tam]={3,-1,5,9},cantNum,op;
	while(op!=5)
	{
		printf("1.Inicializacion Arreglo\n2.Datos Arreglo\n3.Numero Buscar\n4.Pares e Impares\n5.salir\n");
		printf("Ingrese la opcion:");
		scanf("%d",&op);
		switch(op)
		{
			case 1:
				inicializaArreglo(arreglo);
				getch();
				system("cls");
			break;
			case 2:
				printf("Ingrese la cantidad de elementos del vector:");
				scanf("%d",&cantNum);
				datosArreglo(cantNum);
				getch();
				system("cls");
			break;
			case 3:
				printf("Ingrese la cantidad de elementos del vector:");
				scanf("%d",&cantNum);
				numBuscar(cantNum);
				getch();
				system("cls");
			break;
			case 4:
				printf("Ingrese la cantidad de elementos del vector: ");//prompt para pedir un límite de números
				scanf("%d",&cantNum);//lee el número que actuará como límite del arreglo
				Parimpar (cantNum);//implementación de la función para contar pares e impares
				getch();//detiene el programa por un tiempo
				system("cls");//limpia la pantalla para la siguiente repetición del menú
			break;
			case 5:
				exit(0);
			break;
			default:
				printf("Opcion Invalida\n");
			break;
						
		}
	}
		
}
void inicializaArreglo(int arreg[tam])
{
	int cont=0;
	while(cont<4)
	{
		printf("Elemento[%d]=%d\n",cont,arreg[cont]);
		cont++;
	}
}

void datosArreglo(int cant)
{
	int cont=0,arreglo[tam];
	while(cont<cant)
	{
		printf("Ingrese el elemento[%d]:",cont);
		scanf("%d",&arreglo[cont]);
		cont++;
	}
	printf("Elementos del vector\n");
	cont=0;
	while(cont<cant)
	{
		printf("Elemento[%d]=%d\n",cont,arreglo[cont]);
		cont++;
	}
}

void numBuscar(int cant)
{
	int cont=0,arreglo[tam],buscar,cuenta=0;
	while(cont<cant)
	{
		printf("Ingrese el elemento[%d]:",cont);
		scanf("%d",&arreglo[cont]);
		cont++;
	}
	printf("Ingrese el elemento a buscar\n");
	scanf("%d",&buscar);
	cont=0;
	while(cont<cant)
	{
		if(buscar==arreglo[cont])
			cuenta++;
		cont++;
	}
	printf("El numero %d se repite %d",buscar,cuenta);
}
void Parimpar(int cantNum)//definición de la función Parimpar
{
	int cont=0, arreglo[tam], Par=0, Impar=0, cero=0;//declara contador, el arreglo y contadores para pares impares y ceros.
	while(cont<cantNum)//condición de repetición para el ingreso de elementos en el arreglo
	{
		printf("Ingrese un número: ");//prompt para ue el usuario ingrese un número como elelmento del arreglo
		scanf("%d",&arreglo[cont]);//lee el número ingresado por el usuario
		cont++;//aumenta el contador
	}
	cont=0;//reinicia el contador para el siguiente proceso
	while(cont<cantNum)//condición de repetición para la determinación de pares impares y ceros
	{
		if(arreglo[cont]%2==0&&arreglo[cont]!=0)//if para contar pares excluytendo los ceros
			Par=Par+1;//cuenta los numeros determinados como pares
		else if(arreglo[cont]%2!=0&&arreglo[cont]!=0)//if para contar impares excluyendo los ceros
			Impar=Impar+1;//cuenta los numeros determinados impares
		cont++;//aumenta el contador para la repetición del proceso
	}
	printf("De los números ingresados %d son Pares y %d son Impares.\n", Par, Impar);//prompt para escribir los resultados de los contadores de numeros pares e impares
	printf("Tenga en cuenta que los ceros no clasifican como pares o impares.\n");//prompt para hacer saber al usuario que los ceros no son contados ni como pares ni como impares
}
